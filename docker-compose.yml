version: "3.3"

services:
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
#    ports:
#      - "5432:5432"
    restart: always
    networks:
      backend:

  backend:
    build: ./backend
    image: gelmir/backend
    container_name: backend
    command: python ./manage.py runserver 0:80
#    volumes:
#      - ./backend/:/app
    restart: always
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.priority=10"
      - "traefik.frontend.rule=PathPrefix:/admin/,/api/,/__debug__/,/stat/,/auth/"
      - "traefik.backend=backend"
      - "traefik.port=80"
      - "traefik.docker.network=backend"
    networks:
      backend:

  frontend:
    build: ./frontend
    image: gelmir/frontend
    container_name: frontend
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.priority=5"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.backend=frontend"
      - "traefik.port=80"
      - "traefik.docker.network=backend"
    networks:
      backend:

  traefik:
    image: gelmir/traefik
    build:
      context: .
      dockerfile: Dockerfile.traefik

    container_name: traefik
    command: --docker --docker.exposedbydefault=false --logLevel=DEBUG
    restart: always
    ports:
      - "80:80"
      - "5900:5900"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#      - ./local.traefik.toml:/traefik.toml
    networks:
      backend:

networks:
  backend:
    external:
      name: backend